/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// BackupNRestoreSpecApplyConfiguration represents an declarative configuration of the BackupNRestoreSpec type for use
// with apply.
type BackupNRestoreSpecApplyConfiguration struct {
	Namespace    *string `json:"namespace,omitempty"`
	PVCName      *string `json:"pvcname,omitempty"`
	Resource     *string `json:"resource,omitempty"`
	ResourceName *string `json:"resourcename,omitempty"`
	SnapshotName *string `json:"snapshotname,omitempty"`
	Backup       *bool   `json:"backup,omitempty"`
	Restore      *bool   `json:"restore,omitempty"`
}

// BackupNRestoreSpecApplyConfiguration constructs an declarative configuration of the BackupNRestoreSpec type for use with
// apply.
func BackupNRestoreSpec() *BackupNRestoreSpecApplyConfiguration {
	return &BackupNRestoreSpecApplyConfiguration{}
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithNamespace(value string) *BackupNRestoreSpecApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithPVCName sets the PVCName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PVCName field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithPVCName(value string) *BackupNRestoreSpecApplyConfiguration {
	b.PVCName = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithResource(value string) *BackupNRestoreSpecApplyConfiguration {
	b.Resource = &value
	return b
}

// WithResourceName sets the ResourceName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceName field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithResourceName(value string) *BackupNRestoreSpecApplyConfiguration {
	b.ResourceName = &value
	return b
}

// WithSnapshotName sets the SnapshotName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SnapshotName field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithSnapshotName(value string) *BackupNRestoreSpecApplyConfiguration {
	b.SnapshotName = &value
	return b
}

// WithBackup sets the Backup field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Backup field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithBackup(value bool) *BackupNRestoreSpecApplyConfiguration {
	b.Backup = &value
	return b
}

// WithRestore sets the Restore field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Restore field is set to the value of the last call.
func (b *BackupNRestoreSpecApplyConfiguration) WithRestore(value bool) *BackupNRestoreSpecApplyConfiguration {
	b.Restore = &value
	return b
}
