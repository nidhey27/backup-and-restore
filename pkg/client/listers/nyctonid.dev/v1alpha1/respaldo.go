/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/nidhey27/respaldo/pkg/apis/nyctonid.dev/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RespaldoLister helps list Respaldos.
// All objects returned here must be treated as read-only.
type RespaldoLister interface {
	// List lists all Respaldos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Respaldo, err error)
	// Respaldos returns an object that can list and get Respaldos.
	Respaldos(namespace string) RespaldoNamespaceLister
	RespaldoListerExpansion
}

// respaldoLister implements the RespaldoLister interface.
type respaldoLister struct {
	indexer cache.Indexer
}

// NewRespaldoLister returns a new RespaldoLister.
func NewRespaldoLister(indexer cache.Indexer) RespaldoLister {
	return &respaldoLister{indexer: indexer}
}

// List lists all Respaldos in the indexer.
func (s *respaldoLister) List(selector labels.Selector) (ret []*v1alpha1.Respaldo, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Respaldo))
	})
	return ret, err
}

// Respaldos returns an object that can list and get Respaldos.
func (s *respaldoLister) Respaldos(namespace string) RespaldoNamespaceLister {
	return respaldoNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RespaldoNamespaceLister helps list and get Respaldos.
// All objects returned here must be treated as read-only.
type RespaldoNamespaceLister interface {
	// List lists all Respaldos in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Respaldo, err error)
	// Get retrieves the Respaldo from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Respaldo, error)
	RespaldoNamespaceListerExpansion
}

// respaldoNamespaceLister implements the RespaldoNamespaceLister
// interface.
type respaldoNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Respaldos in the indexer for a given namespace.
func (s respaldoNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Respaldo, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Respaldo))
	})
	return ret, err
}

// Get retrieves the Respaldo from the indexer for a given namespace and name.
func (s respaldoNamespaceLister) Get(name string) (*v1alpha1.Respaldo, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("respaldo"), name)
	}
	return obj.(*v1alpha1.Respaldo), nil
}
